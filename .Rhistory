df %>%
filter(year >= 1996)
df %>%
select(year)
df %>%
select("year")
df_spread = df %>%
filter(year >= 1996) %>%
dplyr::select(year, country, NY.GDP.MKTP.KD.ZG) %>%
pivot_wider(names_from = country, values_from = NY.GDP.MKTP.KD.ZG)
ggplot(df %>%
filter(country == c("Germany","Belgium","France")),
aes(x = year, y = NY.GDP.MKTP.KD.ZG, group = country, color = country)) +
geom_line() +
theme_bw()
df_spread
df %>%
filter(country == c("Germany","Belgium","France")),
df %>%
filter(country == c("Germany","Belgium","France")
df %>%
filter(country == c("Germany","Belgium","France"))
df
df_spread = df %>%
filter(year >= 1996) %>%
select(year,country, NY.GDP.MKTP.KD.ZG)
df_spread = df %>%
filter(year >= 1996) %>%
dplyr::select(year, country, NY.GDP.MKTP.KD.ZG) %>%
pivot_wider(names_from = country, values_from = NY.GDP.MKTP.KD.ZG)
df_spread
ggplot(df %>%
filter(country == c("Germany","Belgium","France")),
aes(x = year, y = NY.GDP.MKTP.KD.ZG, group = country, color = country)) +
geom_line() +
theme_bw()
ggplot(df %>%
filter(country == c("Germany","Belgium","France","euro area")),
aes(x = year, y = NY.GDP.MKTP.KD.ZG, group = country, color = country)) +
geom_line() +
theme_bw()
View(df)
df_spread = df %>%
#filter(year >= 1996) %>%
dplyr::select(year, country, NY.GDP.MKTP.KD.ZG) %>%
pivot_wider(names_from = country, values_from = NY.GDP.MKTP.KD.ZG)
ggplot(df %>%
filter(country == c("Germany","Belgium","France","Euro area")),
aes(x = year, y = NY.GDP.MKTP.KD.ZG, group = country, color = country)) +
geom_line() +
theme_bw()
ggplot(df %>%
filter(country == c("Germany","Belgium","France","Euro area")),
aes(x = as.date(year), y = NY.GDP.MKTP.KD.ZG, group = country, color = country)) +
geom_line() +
theme_bw()
library(lubridate)
ggplot(df %>%
filter(country == c("Germany","Belgium","France","Euro area")),
aes(x = as.date(year), y = NY.GDP.MKTP.KD.ZG, group = country, color = country)) +
geom_line() +
theme_bw()
ggplot(df %>%
filter(country == c("Germany","Belgium","France","Euro area")),
aes(x = year, y = NY.GDP.MKTP.KD.ZG, group = country, color = country)) +
geom_line() +
theme_bw()
df %>%
filter(country == c("Germany","Belgium","France","Euro area"))
ggplot(df %>%
filter(country %in% c("Germany","Belgium","France","Euro area")),
aes(x = year, y = NY.GDP.MKTP.KD.ZG, group = country, color = country)) +
geom_line() +
theme_bw()
df %>%
filter(country %in% c("Germany","Belgium","France","Euro area"))
ggplot(df %>%
filter(year >= 1996) %>%
filter(country %in% c("Germany","Belgium","France","Euro area")),
aes(x = year, y = NY.GDP.MKTP.KD.ZG, group = country, color = country)) +
geom_line() +
theme_bw()
cor(as.matrix(df_spread[,-1]))
corrplot(cor(as.matrix(df_spread[,-1])))
corrplot(cor(as.matrix(df_spread[,-1])))
df_spread[,-1]
df_spread = df %>%
filter(year >= 1996) %>%
dplyr::select(year, country, NY.GDP.MKTP.KD.ZG) %>%
pivot_wider(names_from = country, values_from = NY.GDP.MKTP.KD.ZG)
corrplot(cor(as.matrix(df_spread[,-1])))
cor(as.matrix(df_spread[,-1]))
df %>%
filter(year >= 1996) %>%
filter(country %in% c("Germany","Belgium","France","Euro area")) %>%
dplyr::select(year, country, NY.GDP.MKTP.KD.ZG) %>%
pivot_wider(names_from = country, values_from = NY.GDP.MKTP.KD.ZG)
df_spread = df %>%
filter(year >= 1996) %>%
filter(country %in% c("Germany","Belgium","France","Euro area")) %>%
dplyr::select(year, country, NY.GDP.MKTP.KD.ZG) %>%
pivot_wider(names_from = country, values_from = NY.GDP.MKTP.KD.ZG)
cor(as.matrix(df_spread[,-1]))
corrplot(cor(as.matrix(df_spread[,-1])))
mean(as.matrix(df_spread[,-1])))
mean(as.matrix(df_spread[,-1]))
as.matrix(df_spread[,-1])
colMeans(as.matrix(df_spread[,-1])))
colMeans(as.matrix(df_spread[,-1]))
mean = as.matrix(df_spread[,-1])
cor = cor(as.matrix(df_spread[,-1]))
cor
mean
mean = as.matrix(df_spread[,-1])
mean
mean = colmean(as.matrix(df_spread[,-1]))
mean = colMeans(as.matrix(df_spread[,-1]))
mean
mvrnorm(n = 50, mu = mean, Sigma = cor)
df_synth = mvrnorm(n = 50, mu = mean, Sigma = cor)
=chol(cor)
chol(cor)
R_chol = chol(cor)
R_chol*t(R_chol)
cor
?chol
R_chol%*%t(R_chol)
R_chol = as.matrix(chol(cor))
R_chol%*%t(R_chol)
R_chol
R_chol = as.matrix(chol(cor))
R_chol
cor
R_chol = as.matrix(chol(cor, pivot = TRUE)
R_chol = as.matrix(chol(cor, pivot = TRUE))
R_chol%*%t(R_chol)
R_chol = as.matrix(chol(cor, pivot = FALSE))
R_chol%*%t(R_chol)
t(R_chol) %*% R_chol
check = (t(R_chol) %*% R_chol) == cor
check
eigen(cor)
eigen(cor)$values
df_synth
?rep
treat = rbind(rep(0, 30),rep(1,20))
rbind(rep(0, 30),rep(1,20))
treat = rbind(t(rep(0, 30)),t(rep(1,20)))
rep(0, 30)
t(rep(0, 30))
t(rep(1,20))
cov = cov(as.matrix(df_spread[,-1]))
cov(as.matrix(df_spread[,-1]))
cov = cov(as.matrix(df_spread[,-1]))
df_synth = mvrnorm(n = 50, mu = mean, Sigma = cov)
eigen(cov)$values
R_chol = as.matrix(chol(cov))
(t(R_chol) %*% R_chol) == cov
cov
(t(R_chol) %*% R_chol)
c(rep(0, 30), rep(1, 20))
treat = c(rep(0, 30), rep(1, 20))
cov[2,2]
treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20))
treat
df_synth %>%
mutate(Germany_treat = Germany + treat)
df_synth %>%
mutate("Germany_treat" = Germany + treat)
df_synth %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20))) %>%
mutate(Germany_treat = Germany + treat)
df_synth %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20)))
library(dplyr)
library(tidyr)
library(ggplot2)
library(WDI)
library(lubridate)
library(corrplot)
df_synth %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20)))
c(df_synth,treat)
df_synth
c(df_synth,t(treat))
cbind(df_synth,t(treat))
df_synth = as.data.frame(mvrnorm(n = 50, mu = mean, Sigma = cov))
df_synth %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20))) %>%
mutate(Germany_treat = Germany + treat)
T0 = 30
n = 50
T0 = 30
treat = c(rep(0, T0), rep(sqrt(cov[2,2]), n-T0))
df_synth %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20))) %>%
mutate(Germany_treat = Germany + treat)
df_synth %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20))) %>%
mutate(Germany_treat = Germany + treat) %>%
select(-treat)
df_synth %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20))) %>%
mutate(Germany_treat = Germany + treat) %>%
tidyr::select(-treat)
?select
df_synth %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20))) %>%
mutate(Germany_treat = Germany + treat) %>%
dplyr::select(-treat)
detach("package:MASS", unload = TRUE)
df_synth = df_synth %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20))) %>%
mutate(Germany_treat = Germany + treat) %>%
dplyr::select(-treat)
?vars
?gather
df
df_synth
df_synth %>% gather("Country", "GDP")
ggplot(df_synth %>% gather("Country", "GDP"))+
geom_line(y = GDP, group = Country, color = Country)
ggplot(df_synth %>% gather("Country", "GDP"))+
geom_line(y = "GDP", group = Country, color = Country)
ggplot(df_synth %>% gather("Country", "GDP"))+
geom_line(y = "GDP", group = "Country", color = "Country")
test=df_synth %>% gather("Country", "GDP")
esquisse:::esquisser()
seq(1:50)
df_synth %>%
mutate(T=seq(1:50)) %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20))) %>%
mutate(Germany_treat = Germany + treat) %>%
dplyr::select(-treat)
df_synth = df_synth %>%
mutate(T=seq(1:50)) %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20))) %>%
mutate(Germany_treat = Germany + treat) %>%
dplyr::select(-treat)
df_synth %>% gather("Country", "GDP")
df_synth %>% gather("Country", "GDP", T)
esquisse:::esquisser()
df_synth
df_synth %>% gather("Country", "GDP", 1:5)
df_synth %>% gather("Country", "GDP", -T)
ggplot(df_synth %>% gather("Country", "GDP", -T))+
geom_line(x = Ty = "GDP", group = "Country", color = "Country")
ggplot(df_synth %>% gather("Country", "GDP", -T))+
geom_line(x = T, y = "GDP", group = "Country", color = "Country")
ggplot(df_synth %>% gather("Country", "GDP", -T))+
geom_line(x = T, y = GDP, group = Country, color = Country)
df_synth %>% gather("Country", "GDP", -T)
ggplot(df_synth %>% gather("Country", "GDP", -T))+
geom_line(x = T, y = "GDP", group = Country, color = Country)
test = df_synth %>% gather("Country", "GDP", -T)
test
ggplot(test)+
geom_line(x = T, y = "GDP", group = Country, color = Country)
ggplot(test)+
geom_line()
esquisse:::esquisser()
ggplot(test) +
aes(x = T, y = GDP, group = Country) +
geom_line(colour = "#112446") +
theme_minimal()
ggplot(df_synth %>% gather("Country", "GDP", -T)) +
aes(x = T, y = GDP, group = Country) +
geom_line(colour = "#112446") +
theme_minimal()
ggplot(df_synth %>% gather("Country", "GDP", -T)) +
aes(x = T, y = GDP, group = Country, color =Country) +
geom_line() +
theme_minimal()
invert(R_chol)
solve(R_chol)
Q = solve(R_chol)
solve(t(R_chol))
solve((R_chol))
R_chol
mean = c(1,1,1)
cov = matrix(1,0.1,0.4,0.1,1,0.5,0.4,0.5,1, nrwo= 3, ncol = 3)
?matrix
cov = matrix(c(1,0.1,0.4,0.1,1,0.5,0.4,0.5,1), nrwo= 3, ncol = 3)
cov = matrix(c(1,0.1,0.4,0.1,1,0.5,0.4,0.5,1), nrow= 3, ncol = 3)
mean = c(1,1,1)
df_synth = as.data.frame(mvrnorm(n = 50, mu = mean, Sigma = cov))
df_synth
treat = c(rep(0, T0), rep(sqrt(cov[2,2]), n-T0))
df_synth = df_synth %>%
mutate(T=seq(1:50)) %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20))) %>%
mutate(Germany_treat = Germany + treat) %>%
dplyr::select(-treat)
df_synth = df_synth %>%
mutate(T=seq(1:50)) %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20))) %>%
mutate(Germany_treat = v2 + treat) %>%
dplyr::select(-treat)
df_synth %>%
mutate(T=seq(1:50)) %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20))) %>%
mutate(Germany_treat = V2 + treat) %>%
dplyr::select(-treat)
df_synth = df_synth %>%
mutate(T=seq(1:50)) %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[2,2]), 20))) %>%
mutate(Germany_treat = V2 + treat) %>%
dplyr::select(-treat)
colnames(df_synth)[2]
i = 2
df_synth = df_synth %>%
mutate(T=seq(1:50)) %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[i,i]), 20))) %>%
mutate(Germany_treat = colnames(df_synth)[i] + treat) %>%
dplyr::select(-treat)
sqrt(cov[i,i])
colnames(df_synth)[i]
(df_synth)[i]
df_synth %>%
mutate(T=seq(1:50)) %>%
mutate(treat = c(rep(0, 30), rep(sqrt(cov[i,i]), 20))) %>%
mutate(Germany_treat = (df_synth)[i] + treat) %>%
dplyr::select(-treat)
R_chol = as.matrix(chol(cov))
(t(R_chol) %*% R_chol) == cov
Q = solve((R_chol))
Q
q=Q[1,]
q
q[3]
-q[3]/q[2]
Q = solve(t(R_chol))
q=Q[1,]
Q
q
Q = solve((R_chol))
q=Q[1,]
q
cov
mean
R_chol
R_chol = as.matrix(chol(cov, pivot = FALSE))
R_chol
as.matrix(chol(cov, pivot = TRUE))
cov
solve((R_chol))
Q[1,]
solve(t(R_chol))
q[3,2]/q[3,1]
q[3,2]
Q = solve(t(R_chol))
Q[3,2]/Q[3,1]
Q[3,2]
Q[3,3]/Q[3,1]
Q
Q = solve((R_chol))
Q
library(dLagM)
?`dLagM-package`
?dlm
data(M1Germany)
data = M1Germany[1:144,]
model.dlm  = dlm(formula = logprice ~ interest + logm1,
data = data.frame(data) , q = 4)
summary(model.dlm)
?nls
View(df)
formula = dlm(y ~ x1 + x2 + x3, data = df, q = 4)
formula = dlm(formula = y ~ x1 + x2 + x3, data = df, q = 4)
formula = dlm(formula = y ~ x1 + x2 + x3, data = df, q = 4)
data(M1Germany)
data = M1Germany[1:144,]
model.dlm  = dlm(formula = logprice ~ interest + logm1,
data = data.frame(data) , q = 4)
summary(model.dlm)
model.dlm  = dlm(formula = y ~ x1 + x2,
data = data.frame(df) , q = 4)
summary(model.dlm)
model.dlm  = dlm(formula = y ~ x1 + x2 + x3,
data = data.frame(df) , q = 4)
summary(model.dlm)
# Create the dummy variable
d <- c(rep(0, nrow(data) / 2), rep(1, nrow(data) / 2))
d
# Fit the regression model
model <- lm(y ~ x1 + x2 + x3*d , data = df)
# Fit the regression model
model <- lm(y ~ c + x1 + x2 + x3 , data = df)
?lm
# Fit the regression model
model <- lm(y ~ x1 + x2 + x3 , data = df)
summary(model)
# Fit the regression model
model <- lm(y ~ x1 + x2 + x3 -1, data = df)
summary(model)
df_spread[-1]
# Packages ----
library(dplyr)
library(tidyr)
library(ggplot2)
library(WDI)
library(lubridate)
library(corrplot)
library(vars)
# Data Input via World Bank Database ----
Country_List = WDI(indicator='NY.GDP.MKTP.KD.ZG', country="all", start=2020, end=2020)
#Indicator Codes for GDP growth rate, GDP and GDP per Capita
indicator_code = c('NY.GDP.MKTP.KD.ZG','NY.GDP.MKTP.CD','NY.GDP.PCAP.CD')
# Choose Indicator Code: Here 3: GDP per Capita
ic = 3
# Country Presets Like G20, EU, Abadie2015 Country List ----
#g20=c('CN','IN','US','ID','BR','RU','JP','MX','DE','TR','FR','GB','IT','ZA','KR'
#      ,'AR','CA','SA','AU')
#euro_area = 'EMU'
#EU = c('BE','BG','CZ','DK','DE','EE','IE','GR','ES','FR','HR','IT','CY','LV','LT','LU','HU','MT','NL',
#       'AT','PL','PT','RO','SI','SK','FI','SE','XC')
#
Abadie15 = c('AT','NL','JP','US','CH', 'DE')
# Obtain Data unsing Country List and Indicator Code----
df = WDI(indicator=indicator_code[ic], country=Abadie15, start=1960, end=NULL)
#----
#Define Top Element such that the correlation Matrix has the desired structure later on
top_element <- "Germany"
df_spread = df %>%
filter(year >= 1980) %>%
dplyr::select(year, country, indicator_code[ic]) %>%
pivot_wider(names_from = country, values_from = indicator_code[ic]) %>%
relocate(paste(top_element), .after = year)
cor=cor(as.matrix(df_spread[,-1]))
cov=cov(as.matrix(df_spread[,-1]))
corrplot(cor(as.matrix(df_spread[,-1])))
ggplot(df %>%
filter(year >= 1980),
aes(x = year, y = NY.GDP.PCAP.CD, group = country, color = country)) +
geom_line() +
theme_bw()
ggplot(df %>%
filter(year >= 1980),
aes(x = year, y = colnames(df)[5], group = country, color = country)) +
geom_line() +
theme_bw()
#Granger Causality
granger_matrix <- matrix(0, nrow = ncol(df_spread[,-1]), ncol = ncol(df_spread[,-1]))
for (i in 1:(ncol(df_spread[,-1])-1)) {
for (j in (i+1):ncol(df_spread[,-1])) {
# Subset the data to the two time series being tested
subset_ts <- df_spread[,-1][,c(i,j)]
# Run the VAR model with the maximum lag order
var_fit <- VAR(subset_ts, p = 2, type = "const")
# Perform the Granger causality test and extract the p-value
gc_test <- causality(var_fit)
p_value <- gc_test$Granger$p.value
# Store the p-value in the appropriate position in the output matrix
granger_matrix[i,j] <- p_value
granger_matrix[j,i] <- p_value
}
}
#Optimal Lag Number
vars::VARselect(df_spread[-1])
4+3
# 00 PACKAGES AND WD ----
library(tidyverse)
library(gridExtra)
rm(list = ls())
if (Sys.info()[6] == "jctoe"){
setwd("C:/Promotion/SC_Paper/")
} else {
setwd("~/Diss/Topics/Synthetic Control/")
}
source("R-Scripts/Simulations/Functions/my_functions.R")
source("R-Scripts/Simulations/07 - VAR_simu_GDP.R")
#set.seed(052023)
# 01 DGP: FACTOR/VAR ----
## 01.1 Joint Settings ----
# Number of pre-and post-treatment periods
T0 = 100
T1 = 20
# Treatment Effect
post_effect = 10
# Lag for univariate and multivariate dynamic case
p = 2
p_uni = p
p_multi = p
## 01.2 FACTOR Settings ----
# AR-Term of Factors
rho_factor = 0
# AR-Term of Errors: rho_u =  runif(1, rho_u_left, rho_u_right)
rho_u = 0
# rho_u_left = 0.5
# rho_u_right = 0.95
# Factor-Intercept
alpha = 0*(1-rho_factor)
# Factor-Variance
var_factor = 1
# Error-Variance
var_u = 1
# Number of Factors
K = 2
# Group Distribution of Factors
group_distribution = list(
"lambda1" = c(1,0),
"lambda2" = c(0,1))
# Adding a Trend
c = 0
# Specify Treatment-unit. c(rnorm(1, mean = treat_inter, sd = 1), rnorm(J, mean = 0, sd = 1))
treat_inter = 0
## 01.3 VAR Settings ----
# Error-Variance
var_error_VAR = 1
# 02 SIMULATION ----
## 02.1 Settings ----
?var.test
