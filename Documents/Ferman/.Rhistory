#df = WDI(indicator='NY.GDP.MKTP.KD.ZG', country=g20, start=2020, end=2020)
df = WDI(indicator='NY.GDP.MKTP.KD.ZG', country=Abadie15, start=1960, end=NULL)
#df_EMU = WDI(indicator='NY.GDP.MKTP.KD.ZG', country="EMU", start=1960, end=NULL)
df
df_spread = df %>%
#filter(year >= 1996) %>%
#filter(country %in% c("Germany","Belgium","France","Italy")) %>%
dplyr::select(year, country, NY.GDP.MKTP.KD.ZG) %>%
pivot_wider(names_from = country, values_from = NY.GDP.MKTP.KD.ZG)
View(df_spread)
df_spread = df %>%
filter(year >= 1980) %>%
#filter(country %in% c("Germany","Belgium","France","Italy")) %>%
dplyr::select(year, country, NY.GDP.MKTP.KD.ZG) %>%
pivot_wider(names_from = country, values_from = NY.GDP.MKTP.KD.ZG)
df_spread = df %>%
filter(year > 1980) %>%
#filter(country %in% c("Germany","Belgium","France","Italy")) %>%
dplyr::select(year, country, NY.GDP.MKTP.KD.ZG) %>%
pivot_wider(names_from = country, values_from = NY.GDP.MKTP.KD.ZG)
cor=cor(as.matrix(df_spread[,-1]))
cov=cov(as.matrix(df_spread[,-1]))
corrplot(cor(as.matrix(df_spread[,-1])))
ggplot(df %>%
filter(year >= 1996) %>%
filter(country %in% c("Germany","Belgium","France","Euro area")),
aes(x = year, y = NY.GDP.MKTP.KD.ZG, group = country, color = country)) +
geom_line() +
theme_bw()
ggplot(df %>%
filter(year >= 1981),
aes(x = year, y = NY.GDP.MKTP.KD.ZG, group = country, color = country)) +
geom_line() +
theme_bw()
?vars
library(vars)
?vars
?vars()
View(Country_List)
VARselect(df_spread)
VAR(df_spread)
VAR(df_spread, p = 2)
summary(VAR(df_spread, p =2))
VAR_mod = VAR(df_spread, p = 2)
summary(VAR_mod)
VAR_mod
VAR_mod$varresult
VAR_mod$varresult$Germany
VAR_mod= VAR(df_spread[-1], p =2)
VAR_mod$varresult$Germany
summary(VAR_mod)
indicator_code = c('NY.GDP.MKTP.KD.ZG','NY.GDP.MKTP.CD')
df = WDI(indicator='NY.GDP.MKTP.CD', country=Abadie15, start=1960, end=NULL)
df_spread = df %>%
filter(year > 1980) %>%
#filter(country %in% c("Germany","Belgium","France","Italy")) %>%
dplyr::select(year, country, NY.GDP.MKTP.KD.ZG) %>%
pivot_wider(names_from = country, values_from = NY.GDP.MKTP.KD.ZG)
df_spread = df %>%
filter(year > 1980) %>%
#filter(country %in% c("Germany","Belgium","France","Italy")) %>%
dplyr::select(year, country, NY.GDP.MKTP.CD) %>%
pivot_wider(names_from = country, values_from = NY.GDP.MKTP.CD)
df_spread
ggplot(df %>%
filter(year >= 1981),
aes(x = year, y = NY.GDP.MKTP.CD, group = country, color = country)) +
geom_line() +
theme_bw()
VAR_mod= VAR(df_spread[-1], p =2)
VAR_mod$varresult$Germany
VARselect(df_spread[-1])
VAR_mod= VAR(df_spread[-1], p =5)
summary(VAR_mod)
VAR_mod
VAR_mod$varresult$Germany
VAR_mod= VAR(df_spread[-1], p =2)
summary(VAR_mod)
predict(VAR_mod, n.ahead = 10)$fcst
predict(VAR_mod, n.ahead = 10)$fcst
synth = predict(VAR_mod, n.ahead = 10)$fcst
synth$Germany
synth$Germany$fcst
plot(synth$Germany$fcst[1]
plot(synth$Germany$fcst[1])
plot(synth$Germany$fcst[1,])
plot(synth$Germany$fcst[,1])
plot(synth$Germany$fcst[,1])
synth$Germany$fcst[,1]
synth$Germany[,1]
plot(synth$Germany[,1])
VAR_mod= VAR(df_spread[-1], p =5)
synth = predict(VAR_mod, n.ahead = 50)$fcst
plot(synth$Germany[,1])
rbind(df_spread$Germany,synth$Germany[,1])
rbind(df_spread$Germany,synth$Germany[,1])
df_spread$Germany
df_spread$Germany
ts(df_spread$Germany)
synth$Germany[,1]
matrix(c(1,0.1,0.4,0.1,1,0.5,0.4,0.5,1), nrow= 3, ncol = 3)
solve(cov)
cov = matrix(c(1,0.1,0.4,0.1,1,0.5,0.4,0.5,1), nrow= 3, ncol = 3)
solve(cov)
chol(solve(cov))
Q=chol(solve(cov))
q[1,]
Q[1,]
q=Q[1,]
q[2]/q[1]
q[3]/q[1]
View(VAR_mod)
resid(VAR_mod)
u=resid(VAR_mod)
u %*% t(u)
t(u)%*%u
Sigma = t(u)%*%u
chol(solve(Sigma))
Abadie15 = c('AT','NL','JP','US','CH', 'DE')
indicator_code[3]
indicator_code = c('NY.GDP.MKTP.KD.ZG','NY.GDP.MKTP.CD','NY.GDP.PCAP.CD')
indicator_code[3]
library(dplyr)
library(tidyr)
library(ggplot2)
library(WDI)
library(lubridate)
library(corrplot)
Country_List = WDI(indicator='NY.GDP.MKTP.KD.ZG', country="all", start=2020, end=2020)
#Indicator Codes for GDP growth rate, GDP and GDP per Capita
indicator_code = c('NY.GDP.MKTP.KD.ZG','NY.GDP.MKTP.CD','NY.GDP.PCAP.CD')
#g20=c('CN','IN','US','ID','BR','RU','JP','MX','DE','TR','FR','GB','IT','ZA','KR'
#      ,'AR','CA','SA','AU')
#euro_area = 'EMU'
#EU = c('BE','BG','CZ','DK','DE','EE','IE','GR','ES','FR','HR','IT','CY','LV','LT','LU','HU','MT','NL',
#       'AT','PL','PT','RO','SI','SK','FI','SE','XC')
Abadie15 = c('AT','NL','JP','US','CH', 'DE')
df = WDI(indicator=indicator_code[3], country=Abadie15, start=1960, end=NULL)
df_spread = df %>%
filter(year > 1980) %>%
dplyr::select(year, country, indicator_code[3]) %>%
pivot_wider(names_from = country, values_from = indicator_code[3])
df_spread
ic = 3
ic = 3
df_spread = df %>%
filter(year > 1980) %>%
dplyr::select(year, country, indicator_code[ic]) %>%
pivot_wider(names_from = country, values_from = indicator_code[ic])
cor=cor(as.matrix(df_spread[,-1]))
cov=cov(as.matrix(df_spread[,-1]))
cor
cov
corrplot(cor(as.matrix(df_spread[,-1])))
ggplot(df %>%
filter(year >= 1981),
aes(x = year, y = NY.GDP.MKTP.CD, group = country, color = country)) +
geom_line() +
theme_bw()
ggplot(df %>%
filter(year >= 1981),
aes(x = year, y = indicator_code[ic], group = country, color = country)) +
geom_line() +
theme_bw()
df
df_spread = df %>%
#filter(year > 1980) %>%
dplyr::select(year, country, indicator_code[ic]) %>%
pivot_wider(names_from = country, values_from = indicator_code[ic])
df_spread = df %>%
filter(year >= 1980) %>%
dplyr::select(year, country, indicator_code[ic]) %>%
pivot_wider(names_from = country, values_from = indicator_code[ic])
ggplot(df %>%
filter(year >= 1980),
aes(x = year, y = indicator_code[ic], group = country, color = country)) +
geom_line() +
theme_bw()
df %>%
filter(year >= 1980)
ggplot(df %>%
filter(year >= 1980),
aes(x = year, y = NY.GDP.PCAP.CD, group = country, color = country)) +
geom_line() +
theme_bw()
paste0(indicator_code[ic])
indicator_code[ic]
ggplot(df %>%
filter(year >= 1980),
aes(x = year, y = paste0(indicator_code[ic]), group = country, color = country)) +
geom_line() +
theme_bw()
ggplot(df %>%
filter(year >= 1980),
aes(x = year, y = NY.GDP.PCAP.CD, group = country, color = country)) +
geom_line() +
theme_bw()
colnames(df)
as.factor(paste0(indicator_code[ic]))
as.factor(indicator_code[ic])
ggplot(df %>%
filter(year >= 1980),
aes(x = year, y = as.factor(indicator_code[ic]), group = country, color = country)) +
geom_line() +
theme_bw()
ggplot(df %>%
filter(year >= 1980),
aes(x = year, y = NY.GDP.PCAP.CD, group = country, color = country)) +
geom_line() +
theme_bw()
VARselect(df_spread[-1])
VAR_mod= VAR(df_spread[-1], p =6)
summary(VAR_mod)
VAR_mod$varresult$Germany
predict(VAR_mod, n.ahead = 50)$fcst
VAR_mod= VAR(df_spread[-1], p =2)
summary(VAR_mod)
u=resid(VAR_mod)
Sigma = t(u)%*%u
chol(solve(Sigma))
top_element <- "Germany"
cor_mat_reordered <- Sigma[, c(which(names(Sigma) == top_element), -which(names(Sigma) == top_element))]
cor_mat_reordered
df_spread
# Create a sample data frame
df <- data.frame(a = 1:5, b = 6:10, c = 11:15)
# Set the column to be always at second place
second_column <- "c"
# Reorder the data frame
df_reordered <- df[, c(1, which(names(df) == second_column), -which(names(df) == second_column, arr.ind = TRUE))]
df_reordered
install.packages("lessR")
?lessR::corReorder
lessR::corReorder(R=Sigma)
lessR::corReorder(R=Sigma, vars = c("Germany"))
colnames(Sigma)
colnames(Sigma)[-"Germany"]
colnames(Sigma)[-Germany]
colnames(Sigma)
colnames = colnames(Sigma)
filter(!colnames %in% c('Germany'))
filter(colnames != 'Germany')
Filter(colnames != 'Germany')
filter(colnames != 'Germany')
colnames = as.data.frame(colnames(Sigma))
as.data.frame(colnames(Sigma)) %>%
filter(colnames != 'Germany')
rbind(top_element,colnames)
lessR::corReorder(R=Sigma, vars = rbind(top_element,colnames))
vars = list(rbind(top_element,colnames))
lessR::corReorder(R=Sigma, vars = rbind(top_element,colnames))
vars = as.character(rbind(top_element,colnames))
lessR::corReorder(R=Sigma, vars = rbind(top_element,colnames))
rbind(top_element,colnames)
vars = paste(list(rbind(top_element,colnames)))
lessR::corReorder(R=Sigma, vars = rbind(top_element,colnames))
lessR::corReorder(R=Sigma, vars = vars)
vars
rbind(top_element,colnames)
vars = list(rbind(top_element,colnames))
lessR::corReorder(R=Sigma, vars = vars)
as.data.frame(colnames(Sigma)) %>%
filter(colnames != 'Germany')
colnames = as.data.frame(colnames(Sigma)) %>%
filter(colnames != 'Germany')
vars = list(rbind(top_element,colnames))
lessR::corReorder(R=Sigma, vars = vars)
vars
Sigma
vars
vars
vars[[1]]
lessR::corReorder(R=Sigma, vars = vars[[1]])
lessR::corReorder(R=Sigma, vars = vars)
colnames(df_spread)
dplyr::select()
?dplyr::select()
df %>%
filter(year >= 1980) %>%
dplyr::select(year, country, indicator_code[ic]) %>%
pivot_wider(names_from = country, values_from = indicator_code[ic]) %>%
relocate(Germany, .after = year)
df %>%
filter(year >= 1980) %>%
dplyr::select(year, country, indicator_code[ic]) %>%
pivot_wider(names_from = country, values_from = indicator_code[ic])
df
df = WDI(indicator=indicator_code[ic], country=Abadie15, start=1960, end=NULL)
df_spread = df %>%
filter(year >= 1980) %>%
dplyr::select(year, country, indicator_code[ic]) %>%
pivot_wider(names_from = country, values_from = indicator_code[ic]) %>%
relocate(Germany, .after = year)
df_spread
top_element <- "Germany"
df %>%
filter(year >= 1980) %>%
dplyr::select(year, country, indicator_code[ic]) %>%
pivot_wider(names_from = country, values_from = indicator_code[ic]) %>%
relocate(top_element, .after = year)
df %>%
filter(year >= 1980) %>%
dplyr::select(year, country, indicator_code[ic]) %>%
pivot_wider(names_from = country, values_from = indicator_code[ic]) %>%
relocate(paste(top_element), .after = year)
df = WDI(indicator=indicator_code[ic], country=Abadie15, start=1960, end=NULL)
#Define Top Element such that the correlation Matrix has the desired structure
top_element <- "Germany"
df_spread = df %>%
filter(year >= 1980) %>%
dplyr::select(year, country, indicator_code[ic]) %>%
pivot_wider(names_from = country, values_from = indicator_code[ic]) %>%
relocate(paste(top_element), .after = year)
df_spread
cor=cor(as.matrix(df_spread[,-1]))
cov=cov(as.matrix(df_spread[,-1]))
corrplot(cor(as.matrix(df_spread[,-1])))
ggplot(df %>%
filter(year >= 1980),
aes(x = year, y = NY.GDP.PCAP.CD, group = country, color = country)) +
geom_line() +
theme_bw()
VARselect(df_spread[-1])
VAR_mod= VAR(df_spread[-1], p =2)
summary(VAR_mod)
VAR_mod$varresult$Germany
synth = predict(VAR_mod, n.ahead = 50)$fcst
u=resid(VAR_mod)
Sigma = t(u)%*%u
chol(solve(Sigma))
q=chol(solve(Sigma))[1,]
q
length(q)
w=()
w=c()
w=c()
for (i in 2:length(q)){
w[i]=q[i]/q[1]
}
w
w=c()
for (i in 2:length(q)){
w[i-1]=q[i]/q[1]
}
w
ggplot(df %>%
filter(year >= 1980),
aes(x = year, y = paste(indicator_code[ic]), group = country, color = country)) +
geom_line() +
theme_bw()
paste(indicator_code[ic])
ggplot(df %>%
filter(year >= 1980),
aes(x = year,  group = country, color = country)) +
geom_line() +
theme_bw()
paste(top_element)
as.character(indicator=indicator_code[ic])
(indicator=indicator_code[ic])
ggplot(df %>%
filter(year >= 1980),
aes_string(x = year, y = (indicator=indicator_code[ic]), group = country, color = country)) +
geom_line() +
theme_bw()
indicator=indicator_code[ic]
ggplot(df %>%
filter(year >= 1980),
aes_string(x = year, y = indicator_code[ic], group = country, color = country)) +
geom_line() +
theme_bw()
indicator_code[ic]
?aes_string()
ggplot(df %>%
filter(year >= 1980),
aes_string(x = year, y = indicator_code[[ic]], group = country, color = country)) +
geom_line() +
theme_bw()
df
ggplot(df %>%
filter(year >= 1980),
aes(x = year, y = indicator_code[[ic]], group = country, color = country)) +
geom_line() +
theme_bw()
colname(df)[5]
colnames
colnames(df)
colnames(df)[5]
ggplot(df %>%
filter(year >= 1980),
aes(x = year, y = colnames(df)[5], group = country, color = country)) +
geom_line() +
theme_bw()
VARselect(df_spread[-1])
df_spread[-1]
ggplot(df %>%
filter(year >= 1980),
aes(x = year, y = NY.GDP.PCAP.CD, group = country, color = country)) +
geom_line() +
theme_bw()
colnames(df)[5]
name(colnames(df)[5])
w=c()
for (i in 2:length(q)) {w[i-1]=q[i]/q[1]}
w
corrplot(cor(as.matrix(df_spread[,-1])))
sum(w)
w=c()
for (i in 2:length(q)) {w[i-1]=-q[i]/q[1]}
sum(w)
Sigma
w1_j = -0.133
w2_j = 0.4667
mu_s_j = 0.667
df_synth = df_synth %>%
mutate(T = as.numeric(seq(1:n))) %>%
mutate(treat = c(rep(0, T0), rep(sqrt(cov[i,i]), n-T0))) %>%
mutate(v_treat = V1 + treat) %>%
dplyr::select(-treat)
cov
df_synth = as.data.frame(MASS::mvrnorm(n = n, mu = mean, Sigma = cov))
n = 1000
T0 = 600
i = 1
rbind(df_spread$Germany,synth$Germany[,1]
vector1 = c()
vector2 = c()
vector3 = c()
vector4 = c()
mean(df_spread)
colMeans(df_spread)
colMeans(df_spread)[-1]
mean = colMeans(df_spread)[-1
mean = colMeans(df_spread)[-1]
colMeans(df_spread)[-1]
mean = colMeans(df_spread)[-1]
mean
colMeans(as.matrix(df_spread)[-1])
colMeans(as.matrix(df_spread[,-1]))
mean = colMeans(as.matrix(df_spread[,-1]))
cov(as.matrix(df_spread[,-1]))
cor = cor(as.matrix(df_spread[,-1]))
cor
mean = colMeans(as.matrix(df_spread[,-1]))
cor = cor(as.matrix(df_spread[,-1]))
cov = cov(as.matrix(df_spread[,-1]))
df_synth = as.data.frame(MASS::mvrnorm(n = n, mu = mean, Sigma = cov))
df_synth
treat = c(rep(0, T0), rep(sqrt(cov[2,2]), n-T0))
eigen(cov)$values
q=chol(solve(cov))[1,]
w=c()
for (i in 2:length(q)) {w[i-1]=-q[i]/q[1]}
w
df_synth = df_synth %>%
mutate(T = as.numeric(seq(1:n))) %>%
mutate(treat = c(rep(0, T0), rep(sqrt(cov[i,i]), n-T0))) %>%
mutate(v_treat = V1 + treat) %>%
dplyr::select(-treat)
df_synth %>%
mutate(T = as.numeric(seq(1:n)))
df_synth = as.data.frame(MASS::mvrnorm(n = n, mu = mean, Sigma = cov))
c(rep(0, T0), rep(sqrt(cov[2,2]), n-T0))
n = 50
T0 = 30
i = 1
n = 50
T0 = 30
i = 1
treat = c(rep(0, T0), rep(sqrt(cov[2,2]), n-T0))
df_synth %>%
mutate(T = as.numeric(seq(1:n)))
df_synth
n
as.data.frame(MASS::mvrnorm(n = n, mu = mean, Sigma = cov))
df_synth = as.data.frame(MASS::mvrnorm(n = n, mu = mean, Sigma = cov))
treat = c(rep(0, T0), rep(sqrt(cov[2,2]), n-T0))
treat
df_synth %>%
mutate(T = as.numeric(seq(1:n)))
df_synth %>%
mutate(T = as.numeric(seq(1:n))) %>%
mutate(treat = c(rep(0, T0), rep(sqrt(cov[i,i]), n-T0)))
df_synth %>%
mutate(T = as.numeric(seq(1:n))) %>%
mutate(treat = c(rep(0, T0), rep(sqrt(cov[i,i]), n-T0))) %>%
mutate(v_treat = V1 + treat)
i
df_synth %>%
mutate(T = as.numeric(seq(1:n))) %>%
mutate(treat = c(rep(0, T0), rep(sqrt(cov[i,i]), n-T0))) %>%
mutate(Germany_treat = Germany + treat) %>%
dplyr::select(-treat)
df_synth = df_synth %>%
mutate(T = as.numeric(seq(1:n))) %>%
mutate(treat = c(rep(0, T0), rep(sqrt(cov[i,i]), n-T0))) %>%
mutate(Germany_treat = Germany + treat) %>%
dplyr::select(-treat)
test = df_synth %>% gather("Country", "GDP", -T)
ggplot(test) +
aes(x = T, y = GDP, colour = Country) +
geom_line() +
scale_color_hue(direction = 1) +
theme_bw()
predict(VAR_mod, n.ahead = 50)$fcst
predict(VAR_mod, n.ahead = 50)
predict(VAR_mod, n.ahead = 50)$fcst
synth
View(synth)
?VAR.sim
??VAR.sim
??VAR.sim()
vars::VAR.sim
